#' which are specified in remaining columns.
#' @param Q
#' @param model
#' @param exact_prob
#' @param print.all
#'
#' @return
#' @export
#'
#' @examples
devtools::use_package('nleqslv')
#' which are specified in remaining columns.
#' @param Q
#' @param model
#' @param exact_prob
#' @param print.all
#'
#' @return
#' @export
#'
#' @examples
usethis::use_package('nleqslv')
nleqslv::nleqslv(c(
N_flattB$frequency[1]/(N_flattB$frequency[1] + N_flattB$frequency[nrow(N_flattB)]),q),
solve_TQ, N_flatt = N_flattB, NR = NR, control = list(xtol = 1e-15, ftol = 1e-15))$x
# check that the solution satisfies boundaries
if((TQ[1] >= 1 | TQ[1] <= 0) | TQ[2] >= .5 | TQ[1] <= 0){
# if not, try alternative starting values
TQ_seq <- sapply(seq(0.01,0.49,0.01),function(q){
nleqslv::nleqslv(c(
N_flattB$frequency[1]/(N_flattB$frequency[1] + N_flattB$frequency[nrow(N_flattB)]),q),
solve_TQ, N_flatt = N_flattB, NR = NR, control = list(xtol = 1e-15, ftol = 1e-15))$x
})
TQ_seq <- TQ_seq[,!(TQ_seq[1,] >= 1 | TQ_seq[1,] <= 0) & !(TQ_seq[2,] >= .5 | TQ_seq[2,] <= 0)]
if(ncol(TQ_seq) == 0)stop("Solution to routine B not found.")
TQ_seq <- TQ_seq[,!duplicated(round(TQ_seq[2,],3))]
if(is.matrix(TQ_seq))stop("Multiple solutions to routine B found.")
}
#' which are specified in remaining columns.
#' @param Q
#' @param model
#' @param exact_prob
#' @param print.all
#'
#' @return
#' @export
#'
#' @examples
usethis::use_package('nleqslv')
source('C:/Users/Amorel/OneDrive - FilozofickÃ¡ fakulta, Univerzita Karlova v Praze/_DATA/FF UK/Boshek&Marek - reliability/boschek.test/R/boschek.test.R', encoding = 'UTF-8', echo=TRUE)
View(boschek.test)
devtools::install("boschek.test")
devtools::install("boschek.test/")
